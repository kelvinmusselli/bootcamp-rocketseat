const express = require("express"); // chama o express para start o server nodes

const server = express(); //para dar start ao server cria uma var server e chama as funcoes do express
server.use(express.json()); // ESTE PARAMETRO É PARA AS REQUISIÇÕES SEREM SEMPRE JSON

/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////

// simples
server.get("/testesimples", (req, res) => {
  // return res.send("Hello World");
  return res.json({ message: "Hello World" });
});

//com query params
server.get("/teste", (req, res) => {
  //
  // exemplo : http://localhost:3000/teste?nome=Kelvin
  const nome = req.query.nome;

  return res.json({ message: `Hello ${nome}` });
});

// variavel de usuários
const users = ["Kelvin", "Marcelo", "Mateus", "Kauan"];

//para consumo de route params
server.get("/users/:id", (req, res) => {
  //
  // exemplo : http://localhost:3000/users/1
  // const id = req.params.id;
  //com desestruturação
  const { id } = req.params;

  return res.json({ message: `Encontrando o : ${id}` });
});

server.get("/usersbyindex/:index", (req, res) => {
  //
  // exemplo : http://localhost:3000/usersbyindex/:index

  const { index } = req.params;

  return res.json(users[index]);
});
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
// CRUD COMPLETO AGORA///////////////////////////////////////
//GET LIST USERS/////////////////////////////////////////////
server.get("/users", (req, res) => {
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//GET USER BY INDEX(ID)//////////////////////////////////////
/////////////////////////////////////////////////////////////
server.get("/users/:index", (req, res) => {
  const { index } = req.params;

  return res.json(users[index]);
});
/////////////////////////////////////////////////////////////
//CREATE USER////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
server.post("/users", (req, res) => {
  const { name } = req.body;
  users.push(name);
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//UPDATE USER////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
server.put("/users/:index", (req, res) => {
  const { index } = req.params;
  const { name } = req.body;
  //busca a posição e passa o novo name
  users[index] = name;
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//DELETE USER BY INDEX(ID)///////////////////////////////////
/////////////////////////////////////////////////////////////
server.delete("/users/:index", (req, res) => {
  const { index } = req.params;
  //encontra a posição e remove
  users.splice(index, 1);
  return res.json(users);
});
//definindo porta do servidor
server.listen(3000);
