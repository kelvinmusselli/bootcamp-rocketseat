const express = require("express"); // chama o express para start o server nodes
const cors = require("cors");

const server = express(); //para dar start ao server cria uma var server e chama as funcoes do express

server.use(express.json()); // ESTE PARAMETRO É PARA AS REQUISIÇÕES SEREM SEMPRE JSON
server.use(cors());

/////////////////////////////////////////////////////////////

// simples
server.get("/testesimples", (req, res) => {
  // return res.send("Hello World");
  return res.json({ message: "Hello World" });
});

//com query params
server.get("/teste", (req, res) => {
  //
  // exemplo : http://localhost:3000/teste?nome=Kelvin
  const nome = req.query.nome;

  return res.json({ message: `Hello ${nome}` });
});

// variavel de usuários
const users = ["Kelvin", "Marcelo", "Mateus", "Kauan"];

//para consumo de route params
server.get("/usersparams/:id", (req, res) => {
  //
  // exemplo : http://localhost:3000/users/1
  // const id = req.params.id;
  //com desestruturação
  const { id } = req.params;

  return res.json({ message: `Encontrando o : ${id}` });
});

server.get("/usersbyindex/:index", (req, res) => {
  //
  // exemplo : http://localhost:3000/usersbyindex/:index

  const { index } = req.params;

  return res.json(users[index]);
});
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////

//////////////////////////
// MIDDLEWARE GLOBAL//////
//////////////////////////
server.use((req, res, next) => {
  console.time("Request");

  console.log(` O Metodo ${req.method} foi executado; URL:${req.url}`);

  next();

  console.timeEnd("Request");
});

/////////////////////////
////MIDDLEWARE LOCAL/////
/////////////////////////
const checkUserExists = (req, res, next) => {
  if (!req.body.name) {
    return res.status(400).json({ error: "User name required" });
  }

  return next();
};

const checkUserInArray = (req, res, next) => {
  const user = users[req.params.index];

  if (!user) {
    return res.status(400).json({ error: "User does not exists!" });
  }

  req.user = user;

  return next();
};
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////

// CRUD COMPLETO AGORA///////////////////////////////////////
//GET LIST USERS/////////////////////////////////////////////
server.get("/users", (req, res) => {
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//GET USER BY INDEX(ID)//////////////////////////////////////
/////////////////////////////////////////////////////////////
server.get("/users/:index", checkUserInArray, (req, res) => {
  const { index } = req.params;

  return res.json(users[index]);
});
server.get("/usersexample2/:index", checkUserInArray, (req, res) => {
  return res.json(req.user);
});
/////////////////////////////////////////////////////////////
//CREATE USER////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
server.post("/users", checkUserExists, (req, res) => {
  const { name } = req.body;
  users.push(name);
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//UPDATE USER////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
server.put("/users/:index", checkUserExists, checkUserInArray, (req, res) => {
  const { index } = req.params;
  const { name } = req.body;
  //busca a posição e passa o novo name
  users[index] = name;
  return res.json(users);
});
/////////////////////////////////////////////////////////////
//DELETE USER BY INDEX(ID)///////////////////////////////////
/////////////////////////////////////////////////////////////
server.delete("/users/:index", checkUserInArray, (req, res) => {
  const index = req.params.index;
  //encontra a posição e remove
  users.splice(index, 1);
  return res.send("Deletado");
  // return res.json(users);
});
//definindo porta do servidor
server.listen(3000);
